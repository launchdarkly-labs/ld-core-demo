# name: "Build and Deploy Images to LD Booth Demos"

# on:
#   workflow_dispatch:

# env:
#   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
#   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#   AWS_REGION: us-east-1
#   KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
#   ECR_REPOSITORY: ld-core-demo
#   KUBECTL_VERSION: "v1.23.0"
#   LD_API_KEY: ${{ secrets.LD_API_KEY }}
#   LD_EAP_API_KEY: ${{ secrets.LD_EAP_API_KEY }}

# jobs:
#   deploy-to-pods:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         environment: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: "3.9"

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r ./.github/workflows/requirements.txt
#       - name: Get LD ENVs
#         id: get-envs
#         run: |
#           echo "var1=$(python ./.github/workflows/ld_api/get_ld_values.py | sed -n '1p')" >> $GITHUB_ENV
#           echo "var2=$(python ./.github/workflows/ld_api/get_ld_values.py | sed -n '2p')" >> $GITHUB_ENV
#         env:
#           LD_ENV_KEY: demo-${{ matrix.environment }}
#           LD_EAP_API_KEY: ${{ secrets.LD_EAP_API_KEY }}

#       - name: Create .env file
#         run: |
#           touch ./.env.production
#           echo NEXT_PUBLIC_LD_CLIENT_KEY=${{ env.var2 }} >> ./.env.production
#           echo LD_SDK_KEY=${{ env.var1 }} >> ./.env.production
#           echo LD_API_KEY=${{ secrets.LD_API_KEY }} >> ./.env.production
#           echo DESTINATIONENV=demo-${{ matrix.environment }} >> ./.env.production
#           echo PROJECT_KEY=ld-core-demo >> ./.env.production
#           echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY }} >> ./.env.production
#           echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> ./.env.production

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push image to Amazon ECR
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: ld-core-demo
#         run: |
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:ld-demo${{ matrix.environment }}-${{ github.run_number }} .
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:ld-demo${{ matrix.environment }}-${{ github.run_number }}

#       - name: Check Namespace in Kubernetes
#         uses: kodermax/kubectl-aws-eks@master
#         with:
#           args: get namespace demo${{ matrix.environment }} &>/dev/null && echo "namespace_exists=true" >> $GITHUB_ENV || echo "namespace_exists=false" >> $GITHUB_ENV

#       - name: Create Namespace In Kubernetes
#         if: env.namespace_exists == 'false'
#         uses: kodermax/kubectl-aws-eks@master
#         with:
#           args: create namespace demo${{ matrix.environment }}

#       - name: Update K8s Deploy File
#         run: python ./.github/workflows/update_k8s_deploy_file.py
#         env:
#           NAMESPACE: demo${{ matrix.environment }}
#           URL: demo${{ matrix.environment }}.launchdarklydemos.com
#           IMAGE: ${{ steps.login-ecr.outputs.registry }}/ld-core-demo:ld-demo${{ matrix.environment }}-${{ github.run_number }}

#       - name: Show Files
#         run: cat ./.github/workflows/deploy_files/deploy.yaml

#       - name: Applying deploy file to Kubernetes
#         uses: kodermax/kubectl-aws-eks@master
#         with:
#           args: apply -f ./.github/workflows/deploy_files/deploy.yaml -n demo${{ matrix.environment }}

#       - name: Delete the deploy file
#         run: rm -rf ./.github/workflows/deploy_files

#       - name: Remove .env file
#         run: rm ./.env.production

#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 11

#       - name: LaunchDarkly Code References
#         uses: launchdarkly/find-code-references@v2.12.0
#         with:
#           accessToken: ${{ secrets.LD_EAP_API_KEY }}
#           projKey: ld-core-demo-app-reinvent-24
#           repoName: main
